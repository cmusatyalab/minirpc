/*
 * miniRPC - TCP RPC library with asynchronous operations
 *
 * Copyright (C) 2007-2008 Carnegie Mellon University
 *
 * This software is distributed under the terms of the Eclipse Public License,
 * Version 1.0 which can be found in the file named LICENSE.  ANY USE,
 * REPRODUCTION OR DISTRIBUTION OF THIS SOFTWARE CONSTITUTES RECIPIENT'S
 * ACCEPTANCE OF THIS AGREEMENT
 */

struct IntParam {
	int val;
};
const INT_VALUE = 0x3169803f;

struct CondVarPtr {
	unsigned hyper cond;
	unsigned hyper mutex;
};

typedef opaque KBuffer[1024];

serverprocs {
	ping() = 1;
	loop_int(IntParam, IntParam) = 2;
	check_int(IntParam) = 3;
	error(void, IntParam) = 4;
	invalidate_ops() = 5;
	trigger_callback() = 6;
	send_buffer(KBuffer) = 7;
	recv_buffer(void, KBuffer) = 8;
}

servermsgs {
	notify(CondVarPtr) = 1;
	msg_buffer(KBuffer) = 2;
}

clientprocs {
	client_check_int(IntParam) = 1;
}

clientmsgs {
	client_notify(CondVarPtr) = 1;
}
